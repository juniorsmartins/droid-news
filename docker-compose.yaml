version: "3.9"

services:
  postgres16:
    container_name: postgres16
    image: postgres:16beta3-alpine3.18
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: droid_users
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - rede-droid

  mysql8:
    container_name: mysql8
    image: mysql:8.0.18
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: droid_news
    volumes:
      - data-mysql:/var/lib/mysql
    restart: always
    networks:
      - rede-droid

  mongo7:
    container_name: mongo7
    image: mongo:latest
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_DATABASE: droid_blue
    volumes:
      - data-mongo:/data/db
    restart: always
    networks:
      - rede-droid
      

  droid-news-users:
    container_name: users
    build:
      context: ./
      dockerfile: ./droid-news-users/Dockerfile
    ports:
      - "9011:9011"
    # env_file: ./droid-news-users/.env
    environment:
      PORT: 9011
      DB_HOST: postgres16:5432
      DB_DATABASE: droid_users
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      NEWS_URL: news:9012
    restart: always
    networks:
      - rede-droid
    depends_on:
      - postgres16

  droid-news-news:
    container_name: news
    build:
      context: ./
      dockerfile: ./droid-news-news/Dockerfile
    ports:
      - "9012:9012"
    # env_file: ./droid-news-news/.env
    environment:
      PORT: 9012
      DB_HOST: mysql8:3306
      DB_DATABASE: droid_news
      DB_USERNAME: root 
      DB_PASSWORD: mysql 
      USERS_URL: users:9011
    restart: always
    networks:
      - rede-droid
    depends_on:
      - mysql8
      - droid-news-users

  droid-black:
    container_name: black
    build:
      context: ./
      dockerfile: ./droid-black/Dockerfile
    ports:
      - "9013:9013"
    environment:
      PORT: 9013
    restart: always
    networks:
      - rede-droid

  droid-blue:
    container_name: blue
    build:
      context: ./
      dockerfile: ./droid-blue/Dockerfile
    ports:
      - "9014:9014"
    environment:
      PORT: 9014
      DB_HOST: mongo7:27017
      DB_DATABASE: droid_blue
    restart: always
    networks:
      - rede-droid
    depends_on:
      - mongo7

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

volumes:
  data-mysql:
    name: data-mysql
  data-postgres:
    name: data-postgres
  data-mongo:
    name: data-mongo

networks:
  rede-droid:
    name: rede-droid
  broker-kafka:
    driver: bridge
